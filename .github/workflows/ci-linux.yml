name: CI Linux

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Show tree (debug)
        run: ls -R

      - name: Restore (projects)
        run: |
          dotnet restore ./TravelDocFaker/TravelDocFaker.csproj
          dotnet restore ./TravelDocFakerTesting/TravelDocFakerTesting.csproj

      - name: Build (Release)
        run: |
          dotnet build ./TravelDocFaker/TravelDocFaker.csproj -c Release --no-restore
          dotnet build ./TravelDocFakerTesting/TravelDocFakerTesting.csproj -c Release --no-restore

      - name: Publish test binaries
        uses: actions/upload-artifact@v4
        with:
          name: linux-test-binaries
          path: TravelDocFakerTesting/bin/Release/net8.0/**
          if-no-files-found: error

  test-linux:
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Download test binaries
        uses: actions/download-artifact@v4
        with:
          name: linux-test-binaries
          path: ./artifacts

      - name: Run tests (vstest)
        shell: bash
        run: |
          TESTDLL=$(find ./artifacts -name "TravelDocFakerTesting.dll" | head -n 1)
          if [ -z "$TESTDLL" ]; then echo "Test DLL not found"; exit 1; fi
          dotnet vstest "$TESTDLL" --logger:"trx;LogFileName=test-results.trx" /collect:"XPlat Code Coverage"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: linux-test-results
          path: |
            **/test-results.trx
            **/coverage.cobertura.xml


