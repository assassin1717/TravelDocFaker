name: CI Windows

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Show tree (debug)
        shell: pwsh
        run: Get-ChildItem -Recurse | Select-Object FullName

      - name: Restore (projects)
        shell: pwsh
        run: |
          dotnet restore .\TravelDocFaker\TravelDocFaker.csproj
          dotnet restore .\TravelDocFakerTesting\TravelDocFakerTesting.csproj

      - name: Build (Release)
        shell: pwsh
        run: |
          dotnet build .\TravelDocFaker\TravelDocFaker.csproj -c Release --no-restore
          dotnet build .\TravelDocFakerTesting\TravelDocFakerTesting.csproj -c Release --no-restore

      - name: Publish test binaries
        uses: actions/upload-artifact@v4
        with:
          name: windows-test-binaries
          path: TravelDocFakerTesting\bin\Release\net8.0\**
          if-no-files-found: error

  test-windows:
    runs-on: windows-latest
    needs: build-windows
    steps:
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Download test binaries
        uses: actions/download-artifact@v4
        with:
          name: windows-test-binaries
          path: .\artifacts

      - name: Run tests (vstest)
        shell: pwsh
        run: |
          $dll = Get-ChildItem -Path .\artifacts -Filter TravelDocFakerTesting.dll -Recurse | Select-Object -First 1
          if (-not $dll) { Write-Error "Test DLL not found"; exit 1 }
          dotnet vstest $dll.FullName --logger:"trx;LogFileName=test-results.trx" /collect:"XPlat Code Coverage"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-test-results
          path: |
            **\test-results.trx
            **\coverage.cobertura.xml



